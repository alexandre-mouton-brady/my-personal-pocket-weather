module.exports = { contents: "'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nrequire('./styles/index.scss');\n\nvar _inferno = require('inferno');\n\nvar _inferno2 = _interopRequireDefault(_inferno);\n\nvar _infernoComponent = require('inferno-component');\n\nvar _infernoComponent2 = _interopRequireDefault(_infernoComponent);\n\nvar _index = require('./helpers/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _country = require('./helpers/country.js');\n\nvar _country2 = _interopRequireDefault(_country);\n\nvar _iconFinder = require('./helpers/icon-finder.js');\n\nvar _iconFinder2 = _interopRequireDefault(_iconFinder);\n\nvar _unsplashJs = require('unsplash-js');\n\nvar _unsplashJs2 = _interopRequireDefault(_unsplashJs);\n\nvar _SearchBox = require('./components/SearchBox.jsx');\n\nvar _SearchBox2 = _interopRequireDefault(_SearchBox);\n\nvar _Location = require('./components/Location.jsx');\n\nvar _Location2 = _interopRequireDefault(_Location);\n\nvar _Navigation = require('./components/Navigation.jsx');\n\nvar _Navigation2 = _interopRequireDefault(_Navigation);\n\nvar _CurrentWeather = require('./components/CurrentWeather.jsx');\n\nvar _CurrentWeather2 = _interopRequireDefault(_CurrentWeather);\n\nvar _WeatherItem = require('./components/WeatherItem.jsx');\n\nvar _WeatherItem2 = _interopRequireDefault(_WeatherItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Stylesheets\n\n\n// Inferno\n\n\n// Helpers\n\n\n// Components\n\n\n/**\r\n * @description \r\n * @class App\r\n * @extends {Component}\r\n */\nvar createVNode = _inferno2.default.createVNode;\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\n    var unsplash = new _unsplashJs2.default({\n      applicationId: '922fe1e0451f81ea4e20394ef96fde83087fd0557409bdb2f838ef93faabeac1',\n      secret: '70ebaabb07e2514d698915e4555b6a019a29a795647594ec51401c70666b5b07',\n      callbackUrl: 'urn:ietf:wg:oauth:2.0:oob'\n    });\n\n    _this.state = {\n      forecast: null,\n      currentWeather: null,\n      unsplash: unsplash,\n      photo: './assets/bg.jpg',\n      suggest: null,\n      currentLocation: null,\n      country: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (pos) {\n        var url = 'https://geocode.xyz/' + pos.coords.latitude + ',' + pos.coords.longitude + '?json=1 ';\n\n        fetch(url).then(function (data) {\n          return data.json();\n        }).then(function (city) {\n          _this2.setWeather(city.city);\n          _this2.handleInput(city.city);\n        });\n      });\n    }\n\n    /**\r\n     * @description The function handleInput will be triggered on every input in\r\n     * the searchbox. It will send an HTTP request to yahoo's public API to fetch\r\n     * the weather of the city typed and set it in the state of the app component.\r\n     * @param {object} instance - Instance of the App component\r\n     * @param {object} event - Event triggered by the input\r\n     */\n\n  }, {\n    key: 'handleInput',\n    value: function handleInput(value) {\n      var _this3 = this;\n\n      if (value === '') {\n        this.setState({ suggest: null });\n        return;\n      }\n\n      // Create a query string based on the value\n      var query = 'select * from weather.forecast where woeid in (select woeid from geo.places(1) where text=\\'' + value + '\\') AND u=\\'c\\'';\n      // URL of the request with the final query\n      var url = 'https://query.yahooapis.com/v1/public/yql?q=' + query + '&format=json';\n\n      // Making the HTTP request to the public API\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (weatherData) {\n        if (weatherData.query.results) {\n          var weather = weatherData.query.results.channel;\n          var pos = weather.title.indexOf(value);\n          var suggest = pos < 0 ? null : weather.title.slice(pos);\n\n          _this3.setState({ suggest: suggest });\n        } else {\n          _this3.setState({ suggest: null });\n        }\n      });\n    }\n  }, {\n    key: 'setWeather',\n    value: function setWeather(value) {\n      var _this4 = this;\n\n      if (value === '') {\n        this.setState({\n          forecast: null,\n          currentWeather: null,\n          currentLocation: null,\n          country: null\n        });\n        return;\n      }\n\n      // Create a query string based on the value\n      var query = 'select * from weather.forecast where woeid in (select woeid from geo.places(1) where text=\\'' + value + '\\') AND u=\\'c\\'';\n      // URL of the request with the final query\n      var url = 'https://query.yahooapis.com/v1/public/yql?q=' + query + '&format=json';\n\n      // Making the HTTP request to the public API\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (weatherData) {\n        if (weatherData.query.results) {\n          var weather = weatherData.query.results.channel;\n          var forecast = weather.item.forecast.slice(1, 7);\n\n          var pos = weather.title.indexOf(value);\n          var currentLocation = pos < 0 ? null : weather.title.slice(pos);\n\n          var country = (0, _country2.default)(currentLocation.split(',')[2]);\n\n          currentLocation = currentLocation.split(',')[0] + ', ' + country;\n\n          console.log(weather);\n\n          var currentWeather = weather.item.condition;\n\n          _this4.setState({ forecast: forecast, currentWeather: currentWeather, currentLocation: currentLocation, country: country });\n        } else {\n          _this4.setState({\n            forecast: null,\n            currentWeather: null,\n            currentLocation: null,\n            country: null\n          });\n        }\n      });\n    }\n  }, {\n    key: 'setIcon',\n    value: function setIcon(code) {\n      return (0, _iconFinder2.default)(code);\n    }\n  }, {\n    key: 'getImage',\n    value: function getImage(country) {\n      console.log(country);\n      // this.state.unsplash.photos\n      //   .searchPhotos(country, undefined, 1, 5)\n      //   .then(res => res.json())\n      //   .then(json => {\n      //     const random = Math.round(1 + Math.random() * 4);\n\n      //     this.setState({ photo: json[random].links.download });\n      //   });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var f = this.state.forecast;\n      var c = this.state.currentWeather;\n\n      var day = c && c.date.split(' ')[0].replace(/,/g, '') + ' ' + c.date.split(' ')[1];\n\n      return createVNode(2, 'div', 'container', [createVNode(2, 'div', 'hero', [createVNode(2, 'img', 'hero__cover', null, {\n        'src': this.state.photo\n      }), createVNode(2, 'header', 'header', [createVNode(16, _SearchBox2.default, null, null, {\n        'handleInput': (0, _index2.default)(this.handleInput.bind(this), 200),\n        'handleEnter': this.setWeather.bind(this),\n        'setImage': this.getImage.bind(this),\n        'country': this.state.country,\n        'suggest': this.state.suggest\n      }), createVNode(16, _Location2.default, null, null, {\n        'location': this.state.currentLocation\n      })]), createVNode(16, _Navigation2.default)]), createVNode(2, 'div', 'weather', [createVNode(16, _CurrentWeather2.default, null, null, {\n        'temp': c && c.temp,\n        'day': c && day,\n        'icon': c && this.setIcon(c.code),\n        'text': c && c.text\n      }), createVNode(2, 'div', 'weather__right', f && f.map(function (day, i) {\n        return createVNode(16, _WeatherItem2.default, null, null, {\n          'day': day.day,\n          'icon': _this5.setIcon(day.code),\n          'temp': day.low + '\\xB0c - ' + day.high + '\\xB0c'\n        }, i);\n      }))])]);\n    }\n  }]);\n\n  return App;\n}(_infernoComponent2.default);\n\n(0, _inferno.render)(createVNode(16, App), document.getElementById('app'));",
dependencies: ["./styles/index.scss","inferno","inferno-component","./helpers/index.js","./helpers/country.js","./helpers/icon-finder.js","unsplash-js","./components/SearchBox.jsx","./components/Location.jsx","./components/Navigation.jsx","./components/CurrentWeather.jsx","./components/WeatherItem.jsx"],
sourceMap: {},
headerContent: undefined,
mtime: 1500304091257,
devLibsRequired : undefined
};